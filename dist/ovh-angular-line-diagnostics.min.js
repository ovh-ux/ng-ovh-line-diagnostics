/*! ovh-angular-line-diagnostics - 1.0.2 - 2018-08-09 */
"use strict";function _classCallCheck(a,b){if(!(a instanceof b))throw new TypeError("Cannot call a class as a function")}var _createClass=function(){function a(a,b){for(var c=0;c<b.length;c++){var d=b[c];d.enumerable=d.enumerable||!1,d.configurable=!0,"value"in d&&(d.writable=!0),Object.defineProperty(a,d.key,d)}}return function(b,c,d){return c&&a(b.prototype,c),d&&a(b,d),b}}();angular.module("ovh-angular-line-diagnostics",["ovh-api-services"]),angular.module("ovh-angular-line-diagnostics").component("lineDiagnostics",{bindings:{lineNumber:"@",serviceName:"@"},templateUrl:"/ovh-angular-line-diagnostics/src/ovh-angular-line-diagnostics/ovh-angular-line-diagnostics.html",controllerAs:"$ctrl",controller:function(){function a(b,c,d,e,f,g,h){_classCallCheck(this,a),this.$q=c,this.$interval=b,this.$translate=d,this.LineDiagnosticsService=e,this.LineDiagnosticFactory=f,this.Toast=g,this.constants=h}return _createClass(a,[{key:"animateProgressBar",value:function(){var a=this,b=1e3,c=20,d=90;this.incidentTestProgression=0,this.progressBarCycle=this.$interval(function(){a.incidentTestProgression+c<d&&(a.incidentTestProgression=_.random(a.incidentTestProgression,a.incidentTestProgression+c))},b)}},{key:"runLineDiagnostic",value:function(a){var b=this;return this.loadingAction=!0,this.LineDiagnosticsService.getRunDiagnostic({number:this.lineNumber,serviceName:this.serviceName},a).then(function(a){return b.buildLineDiagnostic(a),b.checkDiagnosticStatus(),b.setCurrentStep(),a},function(a){return _.isEmpty(a)||(b.Toast.error([b.$translate.instant("tools_lineDiagnostics_diagnostic_run_error"),_.get(a,"data.message","")].join(" ")),b.stopPoller()),b.$q.reject(a)})["finally"](function(){b.loadingAction=!1,b.incidentTestProgression=100,b.progressBarCycle&&(b.$interval.cancel(b.progressBarCycle),b.progressBarCycle=null)})}},{key:"cancelLineDiagnostic",value:function(){var a=this;this.LineDiagnosticService.getCancelDiagnostic({number:this.lineNumber,serviceName:this.serviceName}).$promise["catch"](function(b){return a.Toast.error([a.$translate.instant("tools_lineDiagnostics_diagnostic_cancel_error"),_.get(b,"data.message","")].join(" ")),a.$q.reject(b)})}},{key:"goOnInvestigationStep",value:function(){this.currentStep=this.constants.STEPS.INVESTIGATION.LABEL}},{key:"setCurrentStep",value:function(){var a=this.constants.STEPS,b=this.currentLineDiagnostic.getActionsToDo(),c=this.currentLineDiagnostic.getQuestionsToAnswer();switch(this.currentLineDiagnostic.faultType){case this.constants.FAULT_TYPES.UNKNOWN:this.currentStep=a.INCIDENT_DETECTION.LABEL;break;case this.constants.FAULT_TYPES.NO_SYNCHRONIZATION:_.isEqual(this.constants.STEPS.INCIDENT_DETECTION.QUESTIONS,c)||_.isEqual(this.constants.STEPS.INCIDENT_DETECTION.ACTIONS,b)?this.currentStep=a.INCIDENT_DETECTION.LABEL:this.currentStep=a.INVESTIGATION.LABEL;break;case this.constants.FAULT_TYPES.ALIGNMENT:case this.constants.FAULT_TYPES.SYNC_LOSS_OR_LOW_BANDWIDTH:this.currentStep=a.INCIDENT_DETECTION.LABEL;break;default:this.currentStep=a.INCIDENT_DETECTION.LABEL}}},{key:"checkDiagnosticStatus",value:function(){this.currentLineDiagnostic.status===this.constants.STATUS.WAITING_ROBOT?this.startPoller(this.currentLineDiagnostic):_.includes(_.union(this.constants.STATUS.END,this.constants.STATUS.PAUSE),this.currentLineDiagnostic.status)?this.stopPoller():this.currentLineDiagnostic.status===this.constants.STATUS.PROBLEM&&(this.stopPoller(),this.cancelLineDiagnostic())}},{key:"setModemStatus",value:function(a){this.currentLineDiagnostic.data.answers.modemIsSynchronized=a,this.startPoller()}},{key:"startPoller",value:function(){this.runLineDiagnostic(this.currentLineDiagnostic.convertToRequestParams())}},{key:"stopPoller",value:function(){this.LineDiagnosticsService.deletePollDiagnostic()}},{key:"buildLineDiagnostic",value:function(a){this.currentLineDiagnostic=new this.LineDiagnosticFactory(a)}},{key:"setModemUnplug",value:function(a){this.currentLineDiagnostic.addActionDone(a),this.runLineDiagnostic(this.currentLineDiagnostic.convertToRequestParams())}},{key:"$onInit",value:function(){var a=this;this.currentLineDiagnostic=null,this.currentStep=this.constants.STEPS.INCIDENT_DETECTION.LABEL,this.loadingAction=!1,this.loadingQuestion=!1,this.progressBarCycle=null,this.waitingRobotAction=!1,this.LineDiagnosticsService.loadTranslations().then(function(){var b={};a.translateReady=!0,a.animateProgressBar(),"xdsl-ls148374-2"===a.serviceName&&(b={faultType:"alignment",answers:{modemType:"forceAlignment"}}),a.runLineDiagnostic(b)},function(){a.translateReady=null})}},{key:"$onDestroy",value:function(){this.stopPoller()}}]),a}()}),angular.module("ovh-angular-line-diagnostics").constant("DIAGNOSTICS_CONSTANTS",{STEPS:{INCIDENT_DETECTION:{LABEL:"incidentDetectionStep",ACTIONS:["unplugModem"],QUESTIONS:["modemIsSynchronized"]},INVESTIGATION:{LABEL:"investigationStep",ACTIONS:[]},SOLUTION_PROPOSAL:{LABEL:"solutionProposalStep",ACTIONS:[]}},FAULT_TYPES:{UNKNOWN:"unknown",NO_SYNCHRONIZATION:"noSync",ALIGNMENT:"alignment",SYNC_LOSS_OR_LOW_BANDWIDTH:"syncLossOrLowBandwidth"},STATUS:{END:["cancelled","connectionProblem","haveToConnectModemOnTheRightPlug","interventionRequested","resolvedAfterTests","validationRefused"],PAUSE:["init","sleeping","waitingHuman"],PROBLEM:"problem",SPECIAL:[],WAITING_ROBOT:"waitingRobot"}}),angular.module("ovh-angular-line-diagnostics").factory("LineDiagnosticFactory",function(){var a=["data","faultType","id","status"],b=function(){function b(c){_classCallCheck(this,b),_.forEach(a,function(a){if(!_.has(c,a))throw new Error(a+" option must be specified when creating a new LineDiagnostic")}),this.id=c.id,this.faultType=c.faultType,this.status=c.status,this.data=c.data}return _createClass(b,[{key:"getActionsToDo",value:function(){var a=_.get(this,"data.actionsToDo",[]);return _.chain(a).map("name").flatten().value()}},{key:"hasActionToDo",value:function(a){return _.includes(this.getActionsToDo(),a)}},{key:"getActionsDone",value:function(){var a=_.get(this,"data.actionsDone",[]);return _.chain(a).map("name").flatten().value()}},{key:"addActionDone",value:function(a){_.isArray(a)?this.data.actionsDone=_.union(this.data.actionsDone,a):this.data.actionsDone.push(a)}},{key:"getQuestionsToAnswer",value:function(){var a=_.get(this,"data.toAnswer",[]);return _.chain(a).map("name").flatten().value()}},{key:"hasQuestionToAnswer",value:function(a){return _.includes(this.getQuestionsToAnswer(),a)}},{key:"convertToRequestParams",value:function(){var a="unknown";return{actionsDone:this.data.actionsDone,answers:this.data.answers,faultType:this.faultType||a}}}]),b}();return b}),angular.module("ovh-angular-line-diagnostics").provider("LineDiagnostics",function(){var a="$http",b="../bower_components/ovh-angular-line-diagnostics/dist",c=null,d="";this.setPathPrefix=function(a){return a&&(d=a),d},this.setProxy=function(b){return void 0!==b&&(a=b),a},this.setpollingApiOptions=function(a){return void 0!==a&&(c=a),c},this.setTranslationsPath=function(a){return void 0!==a&&(b=a),b},this.$get=["$injector","Poller","$translatePartialLoader","$translate","OvhApiXdslDiagnosticLines",function(e,f,g,h,i){var j={},k=e.get(a);return j.loadTranslations=function(){return angular.forEach([b],function(a){g.addPart(a)}),h.refresh()},j.getRunDiagnostic=function(a,b){var c={faultType:"unknown"},d=b&&b.faultType?b:angular.extend(c,b||{});return d&&d.answers&&_.forIn(d.answers,function(a,b){("true"===a||"false"===a)&&(d.answers[b]="true"===d.answers[b])}),i.v6().runDiagnostic(_.merge(a,d))},j.getCancelDiagnostic=function(a){return i.v6().cancelDiagnostic(a)},j.deletePollDiagnostic=function(){return i.v6().killPollerDiagnostic()},j.getWaitingValidationDiagnostics=function(){var a=e.get("$q");return k.get([d,"diagnostic/getWaitingValidationDiagnostics"].join("/")).then(function(a){return a.data},function(b){return a.reject(b)})},j.pollWaitingValidationDiagnostics=function(){return f.poll([d,"diagnostic/getWaitingValidationDiagnostics"].join("/"),c,{namespace:"tools_validation_diagnostics",method:"get",interval:3e4})},j.killPollWaitingValidationDiagnostics=function(){f.kill({namespace:"tools_validation_diagnostics"})},j.validateDiagnostics=function(a,b){var c=e.get("$q");return k.post([d,"diagnostic",a,"validate"].join("/"),b).then(function(a){return a.data},function(a){return c.reject(a)})},j.runPollGetDiagnostic=function(a,b){var e={faultType:"noSync"},g=b&&b.faultType?b:angular.extend(e,b||{});return f.poll(URI.expand([d,"lines","{number}","diagnostic/run"].join("/"),a).toString(),c,{namespace:"tools_line_diagnostics",method:"post",postData:g,interval:5e3,successRule:function(a){return"waitingRobot"!==a.status}})},j}]}),angular.module("ovh-angular-line-diagnostics").run(["$templateCache",function(a){a.put("/ovh-angular-line-diagnostics/src/ovh-angular-line-diagnostics/ovh-angular-line-diagnostics.html","<div class=row><div class=col-md-6><div class=oui-progress-tracker><ol class=oui-progress-tracker__steps><li class=oui-progress-tracker__step data-ng-class=\"{\n                        'oui-progress-tracker__step_active': $ctrl.currentStep === 'incidentDetectionStep',\n                        'oui-progress-tracker__step_complete': $ctrl.currentStep !== 'incidentDetectionStep'\n                    }\"><span class=oui-progress-tracker__status><span class=oui-progress-tracker__label data-translate=tools_lineDiagnostics_step_incident_detection></span></span></li><li class=oui-progress-tracker__step data-ng-class=\"{\n                        'oui-progress-tracker__step_active': $ctrl.currentStep === 'investigationStep',\n                        'oui-progress-tracker__step_complete': $ctrl.currentStep === 'solutionProposalStep',\n                        'oui-progress-tracker__step_disabled': $ctrl.currentStep === 'incidentDetectionStep'\n                    }\"><span class=oui-progress-tracker__status><span class=oui-progress-tracker__label data-translate=tools_lineDiagnostics_step_line_diagnostic></span></span></li><li class=oui-progress-tracker__step data-ng-class=\"{\n                        'oui-progress-tracker__step_active': $ctrl.currentStep === 'solutionProposalStep',\n                        'oui-progress-tracker__step_disabled': $ctrl.currentStep !== 'solutionProposalStep'\n                    }\"><span class=oui-progress-tracker__status><span class=oui-progress-tracker__label data-translate=tools_lineDiagnostics_step_solution_proposal></span></span></li></ol></div></div></div><div class=row><toast-message></toast-message></div><div class=row data-ng-if=\"$ctrl.currentLineDiagnostic.status !== 'problem'\"><div data-ng-if=\"$ctrl.currentStep === 'incidentDetectionStep'\" data-ng-include=\"'/ovh-angular-line-diagnostics/src/ovh-angular-line-diagnostics/steps/ovh-angular-line-diagnostics-incident-step.html'\"></div><div data-ng-if=\"$ctrl.currentStep === 'investigationStep'\"></div></div><div class=form-group data-ng-if=\"$ctrl.currentLineDiagnostic.status === 'problem'\"><oui-message data-type=warning><span data-translate=tools_lineDiagnostics_diagnostic_critical_problem></span></oui-message></div>"),a.put("/ovh-angular-line-diagnostics/src/ovh-angular-line-diagnostics/steps/ovh-angular-line-diagnostics-incident-step.html",'<div class=col-md-8 data-ng-if="$ctrl.incidentTestProgression < 100"><span data-translate=tools_lineDiagnostics_incident_detection_test></span><oui-progress><oui-progress-bar data-type=info data-value=$ctrl.incidentTestProgression></oui-progress-bar></oui-progress></div><div class="col-md-4 row" data-ng-if="$ctrl.currentLineDiagnostic.status === \'waitingRobot\'"><div class="d-inline-block col-xs-1"><oui-spinner size=s></oui-spinner></div><p class=d-inline-block data-translate=tools_lineDiagnostics_waitingRobot></p></div><div class=col-md-8 data-ng-if="$ctrl.incidentTestProgression === 100 &&\n                 $ctrl.currentLineDiagnostic"><div data-ng-if="$ctrl.currentLineDiagnostic.hasQuestionToAnswer(\'modemIsSynchronized\')"><oui-field data-label="{{:: \'tools_lineDiagnostics_incident_detection_modem_question\' | translate }}" data-label-popover="{{:: \'tools_lineDiagnostics_incident_detection_modem_question_help\' | translate }}"><div class=oui-button-group><oui-button data-text="{{:: \'tools_lineDiagnostics_detail_yes\' | translate }}" data-variant=secondary data-ng-click=$ctrl.setModemStatus(true)></oui-button><oui-button data-text="{{:: \'tools_lineDiagnostics_detail_no\' | translate }}" data-variant=secondary data-ng-click=$ctrl.setModemStatus(false)></oui-button></div><span data-ng-if=$ctrl.loadingAction><oui-spinner size=s></oui-spinner></span></oui-field></div><div data-ng-if="$ctrl.currentLineDiagnostic.hasActionToDo(\'unplugModem\')"><oui-message data-type=warning><span data-translate=tools_lineDiagnostics_incident_detection_warning></span></oui-message><oui-field data-ng-if="$ctrl.currentLineDiagnostic.faultType === \'noSync\'" data-label="{{:: \'tools_lineDiagnostics_incident_detection_modem_unplug_request\' | translate }}"><oui-button data-text="{{:: \'tools_lineDiagnostics_incident_detection_modem_unplug_confirm\' | translate }}" data-variant=secondary data-variant-nav=next data-ng-click="$ctrl.setModemUnplug(\'unplugModem\')"></oui-button><span data-ng-if=$ctrl.loadingAction><oui-spinner size=s></oui-spinner></span></oui-field><oui-field data-ng-if="$ctrl.currentLineDiagnostic.faultType === \'alignment\' ||\n                               $ctrl.currentLineDiagnostic.faultType === \'syncLossOrLowBandwidth\'"><oui-button data-text="{{:: \'tools_lineDiagnostics_incident_detection_continue\' | translate }}" data-variant=secondary data-variant-nav=next data-ng-click=$ctrl.goOnInvestigationStep()></oui-button></oui-field></div></div>')}]);